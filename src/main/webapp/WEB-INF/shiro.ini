    [main]

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

dataSource =  org.postgresql.ds.PGPoolingDataSource
dataSource.serverName = ec2-174-129-253-47.compute-1.amazonaws.com
dataSource.databaseName = d6os0ubmv4l82d
dataSource.portNumber = 5432
dataSource.ssl = true
dataSource.sslfactory = org.postgresql.ssl.NonValidatingFactory
dataSource.user = dgzsgodijyfsjh
dataSource.password = d803189a424cf6916499cfa92a26204a6f60999af73a5446f676722c4a17463b
jdbcRealm.dataSource = $dataSource


jdbcRealm.authenticationQuery = SELECT contrase√±a FROM usuarios WHERE email = ?
jdbcRealm.userRolesQuery = SELECT tipo FROM tipo_usuario WHERE id = (SELECT tipo_usuario_id FROM Usuarios WHERE email = ?)

authc.loginUrl = /faces/login.xhtml
logout.redirectUrl= /faces/login.xhtml

authc.usernameParam=email
authc.passwordParam=password
passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations=1
credentialsMatcher.storedCredentialsHexEncoded = true
anyofroles = AnyOfRolesAuthorizationFilter
onlynot = edu.eci.cvds.security.OnlyNotAutenticated 



[urls]
/login.xhtml =anyofroles["pro"]
/faces/login.xhtml =authc
/faces/secure/Comunidad.xhtml = authc,anyofroles["administrador,comunidad"]
/faces/secure/Administrador.xhtml = authc, anyofroles["administrador"]

/secure/Comunidad.xhtml = anyofroles["pro"]
/secure/Administrador.xhtml = anyofroles["pro"]
/secure/** = anyofroles["pro"]
/faces/secure/** = authc

/=onlynot  
/faces/login.xhtml=onlynot
/logout = logout






